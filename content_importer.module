<?php
/**
 * Run drush ev "content_importer_import();"
 * to import sample content.
 */

/**
 * Simple content importer
 */
function content_importer_import() {
  $q = "https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20htmlstring%20where%20url%3D%27http%3A%2F%2Fwww.bil-jac.com%2Fdog-breeds.php%27%20and%20xpath%3D%27%2F%2F*%5B%40id%3D%22breeds%22%5D%2F%2Fa%27&format=json&&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys";

  // Create curl request
  $curl = curl_init();
  curl_setopt($curl, CURLOPT_URL, $q);
  curl_setopt($curl, CURLOPT_FAILONERROR, true);
  curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false);
  curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
  $out = curl_exec($curl);

  // Get list of Dogs & URLs from http://www.bil-jac.com/dog-breeds.php
  $dogs = json_decode($out);




  $dom = new DomDocument();
  $dom->loadHTML($dogs->query->results->result);
  $urls = $dom->getElementsByTagName('a');

  $dogs = explode("\n", $dom->textContent);



  foreach ($dogs as $key => $value) {

    $dog_url = "http://www.bil-jac.com/breed.php?name=" . urlencode($value);
    curl_setopt($curl, CURLOPT_URL, $dog_url);
    $dog_details = curl_exec($curl);

    // Get the role
    $role = substr($dog_details, strpos($dog_details, '<p id="role">'));
    $role = strip_tags(substr($role, 0, strpos($role, '</p>')));
    $role = str_replace("Today's Role:", '', $role);

    // Get the aka
    $aka = substr($dog_details, strpos($dog_details, '<p id="aka">'));
    $aka = strip_tags(substr($aka, 0, strpos($aka, '</p>')));
    $aka = str_replace("Also know as:", '', $aka);

    // Get the history
    $history = substr($dog_details, strpos($dog_details, '<p id="history">'));
    $history = strip_tags(substr($history, 0, strpos($history, '</p>')));
    $history = str_replace("History and Facts:", '', $history);

    $origin = substr($dog_details, strpos($dog_details, '<p id="origin">'));
    $origin = strip_tags(substr($origin, 0, strpos($origin, '</p>')));
    $origin = str_replace("Origin:", '', $origin);

    $health = substr($dog_details, strpos($dog_details, '<p id="health">'));
    $health = strip_tags(substr($health, 0, strpos($health, '</p>')));
    $health = str_replace("Breed-Related Health Concerns", '', $health);

    $temperament = substr($dog_details, strpos($dog_details, '<p id="temperament">'));
    $temperament = strip_tags(substr($temperament, 0, strpos($temperament, '</p>')));
    $temperament = str_replace("Temperament / Behavior", '', $temperament);

    $group = substr($dog_details, strpos($dog_details, '<p id="group">'));
    $group = strip_tags(substr($group, 0, strpos($group, '</p>')));
    $group  = str_replace("Group:", '', $group);

    $node = entity_create('node', array('type' => 'dog'));

    $fields = array(
      'aka' => $aka,
      'group' => $group,
      'origin' => $origin,
      'role' => $role,
      'history' => $history,
      'health' => $health,
      'temperament' => $temperament,
    );

//print_r($fields);


    $new_node = entity_metadata_wrapper('node', $node);
    $new_node->title = $value;
    $node->uid = 0;

    // Check for a matching field.
    foreach ($fields as $field => $value) {
      if (!empty($value)) {

        $field = "field_{$field}";
        if (strlen($value) < 500) {
            $new_node->$field = trim(check_plain($value));
          }
      }

    }
    if ($new_node->save()) {
      drush_print("Importing " . check_plain($node->title));
    };
  }
}


